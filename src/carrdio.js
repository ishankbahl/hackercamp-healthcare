import KNN from 'ml-knn';
let knn;

let seperationSize; // To seperate training and test data

let data = [{ crp: '',
total_cholestrol: '',
LDL: '',
HDL: '',
Target: '',
field6: '',
field7: '',
field8: '',
field9: '',
field10: '',
field11: '',
field12: '',
field13: '',
field14: '',
field15: 'crp',
field16: 'total_cholestrol',
field17: 'LDL',
field18: 'HDL',
field19: 'Target',
field20: '',
field21: '',
field22: '',
field23: '',
field24: '',
field25: '',
field26: 'c' },
{ crp: '',
total_cholestrol: '',
LDL: '',
HDL: '',
Target: '',
field6: '',
field7: '',
field8: '',
field9: '',
field10: '',
field11: '',
field12: '',
field13: '',
field14: '',
field15: '3.3',
field16: '265',
field17: '233',
field18: '32',
field19: '0',
field20: '',
field21: '',
field22: '',
field23: '',
field24: '',
field25: '',
field26: '' },
{ crp: '',
total_cholestrol: '',
LDL: '',
HDL: '',
Target: '',
field6: '',
field7: '',
field8: '',
field9: '',
field10: '',
field11: '',
field12: '',
field13: '',
field14: '',
field15: '2.3',
field16: '245',
field17: '345',
field18: '45',
field19: '1',
field20: '',
field21: '',
field22: '',
field23: '',
field24: '',
field25: '',
field26: '' },
{ crp: '',
total_cholestrol: '',
LDL: '',
HDL: '',
Target: '',
field6: '',
field7: '',
field8: '',
field9: '',
field10: '',
field11: '',
field12: '',
field13: '',
field14: '',
field15: '4',
field16: '234',
field17: '234',
field18: '21',
field19: '0',
field20: '',
field21: '',
field22: '',
field23: '',
field24: '',
field25: '',
field26: '' },
{ crp: '',
total_cholestrol: '',
LDL: '',
HDL: '',
Target: '',
field6: '',
field7: '',
field8: '',
field9: '',
field10: '',
field11: '',
field12: '',
field13: '',
field14: '',
field15: '3.5',
field16: '232',
field17: '134',
field18: '23',
field19: '1',
field20: '',
field21: '',
field22: '',
field23: '',
field24: '',
field25: '',
field26: '' },
{ crp: '',
total_cholestrol: '',
LDL: '',
HDL: '',
Target: '',
field6: '',
field7: '',
field8: '',
field9: '',
field10: '',
field11: '',
field12: '',
field13: '',
field14: '',
field15: '5.4',
field16: '232',
field17: '256',
field18: '45',
field19: '1',
field20: '',
field21: '',
field22: '',
field23: '',
field24: '',
field25: '',
field26: '' },
{ crp: '',
total_cholestrol: '',
LDL: '',
HDL: '',
Target: '',
field6: '',
field7: '',
field8: '',
field9: '',
field10: '',
field11: '',
field12: '',
field13: '',
field14: '',
field15: '3.3',
field16: '256',
field17: '150',
field18: '23',
field19: '0',
field20: '',
field21: '',
field22: '',
field23: '',
field24: '',
field25: '',
field26: '' },
{ crp: '',
total_cholestrol: '',
LDL: '',
HDL: '',
Target: '',
field6: '',
field7: '',
field8: '',
field9: '',
field10: '',
field11: '',
field12: '',
field13: '',
field14: '',
field15: '5.6',
field16: '234',
field17: '220',
field18: '23',
field19: '1',
field20: '',
field21: '',
field22: '',
field23: '',
field24: '',
field25: '',
field26: '' },
{ crp: '',
total_cholestrol: '',
LDL: '',
HDL: '',
Target: '',
field6: '',
field7: '',
field8: '',
field9: '',
field10: '',
field11: '',
field12: '',
field13: '',
field14: '',
field15: '4.5',
field16: '232',
field17: '140',
field18: '31',
field19: '0',
field20: '',
field21: '',
field22: '',
field23: '',
field24: '',
field25: '',
field26: '' },
{ crp: '',
total_cholestrol: '',
LDL: '',
HDL: '',
Target: '',
field6: '',
field7: '',
field8: '',
field9: '',
field10: '',
field11: '',
field12: '',
field13: '',
field14: '',
field15: '3.2',
field16: '290',
field17: '232',
field18: '25',
field19: '1',
field20: '',
field21: '',
field22: '',
field23: '',
field24: '',
field25: '',
field26: '' },
{ crp: '',
total_cholestrol: '',
LDL: '',
HDL: '',
Target: '',
field6: '',
field7: '',
field8: '',
field9: '',
field10: '',
field11: '',
field12: '',
field13: '',
field14: '',
field15: '2.5',
field16: '239',
field17: '567',
field18: '55',
field19: '1',
field20: '',
field21: '',
field22: '',
field23: '',
field24: '',
field25: '',
field26: '' },
{ crp: '',
total_cholestrol: '',
LDL: '',
HDL: '',
Target: '',
field6: '',
field7: '',
field8: '',
field9: '',
field10: '',
field11: '',
field12: '',
field13: '',
field14: '',
field15: '3.4',
field16: '220',
field17: '232',
field18: '44',
field19: '0',
field20: '',
field21: '',
field22: '',
field23: '',
field24: '',
field25: '',
field26: '' },
{ crp: '',
total_cholestrol: '',
LDL: '',
HDL: '',
Target: '',
field6: '',
field7: '',
field8: '',
field9: '',
field10: '',
field11: '',
field12: '',
field13: '',
field14: '',
field15: '1.2',
field16: '121',
field17: '230',
field18: '22',
field19: '0',
field20: '',
field21: '',
field22: '',
field23: '',
field24: '',
field25: '',
field26: '' },
{ crp: '',
total_cholestrol: '',
LDL: '',
HDL: '',
Target: '',
field6: '',
field7: '',
field8: '',
field9: '',
field10: '',
field11: '',
field12: '',
field13: '',
field14: '',
field15: '3.4',
field16: '236',
field17: '250',
field18: '12',
field19: '0',
field20: '',
field21: '',
field22: '',
field23: '',
field24: '',
field25: '',
field26: '' },
{ crp: '',
total_cholestrol: '',
LDL: '',
HDL: '',
Target: '',
field6: '',
field7: '',
field8: '',
field9: '',
field10: '',
field11: '',
field12: '',
field13: '',
field14: '',
field15: '5.6',
field16: '150',
field17: '212',
field18: '41',
field19: '1',
field20: '',
field21: '',
field22: '',
field23: '',
field24: '',
field25: '',
field26: '' },
{ crp: '',
total_cholestrol: '',
LDL: '',
HDL: '',
Target: '',
field6: '',
field7: '',
field8: '',
field9: '',
field10: '',
field11: '',
field12: '',
field13: '',
field14: '',
field15: '1.2',
field16: '323',
field17: '445',
field18: '21',
field19: '0',
field20: '',
field21: '',
field22: '',
field23: '',
field24: '',
field25: '',
field26: '' },
{ crp: '',
total_cholestrol: '',
LDL: '',
HDL: '',
Target: '',
field6: '',
field7: '',
field8: '',
field9: '',
field10: '',
field11: '',
field12: '',
field13: '',
field14: '',
field15: '4.1',
field16: '231',
field17: '231',
field18: '55',
field19: '1',
field20: '',
field21: '',
field22: '',
field23: '',
field24: '',
field25: '',
field26: '' },
{ crp: '',
total_cholestrol: '',
LDL: '',
HDL: '',
Target: '',
field6: '',
field7: '',
field8: '',
field9: '',
field10: '',
field11: '',
field12: '',
field13: '',
field14: '',
field15: '1.2',
field16: '234',
field17: '232',
field18: '123',
field19: '1',
field20: '',
field21: '',
field22: '',
field23: '',
field24: '',
field25: '',
field26: '' },
{ crp: '',
total_cholestrol: '',
LDL: '',
HDL: '',
Target: '',
field6: '',
field7: '',
field8: '',
field9: '',
field10: '',
field11: '',
field12: '',
field13: '',
field14: '',
field15: '2.2',
field16: '323',
field17: '212',
field18: '223',
field19: '1',
field20: '',
field21: '',
field22: '',
field23: '',
field24: '',
field25: '',
field26: '' },
{ crp: '',
total_cholestrol: '',
LDL: '',
HDL: '',
Target: '',
field6: '',
field7: '',
field8: '',
field9: '',
field10: '',
field11: '',
field12: '',
field13: '',
field14: '',
field15: '4.1',
field16: '250',
field17: '234',
field18: '121',
field19: '0',
field20: '',
field21: '',
field22: '',
field23: '',
field24: '',
field25: '',
field26: '' }], X = [], y = [];

let trainingSetX = [], trainingSetY = [], testSetX = [], testSetY = [];

seperationSize = 0.7 * data.length;
data = shuffleArray(data);

export default function dressData(temp) {

    let types = new Set(); // To gather UNIQUE classes

    data.forEach((row) => {
        types.add(row.type);
    });

    const typesArray = [...types]; // To save the different types of classes.

    data.forEach((row) => {
        let rowArray, typeNumber;

        rowArray = Object.keys(row).map(key => parseFloat(row[key])).slice(0, 4);

        typeNumber = typesArray.indexOf(row.Target); // Convert type(String) to type(Number)

        X.push(rowArray);
        y.push(typeNumber);
    });

    trainingSetX = X.slice(0, seperationSize);
    trainingSetY = y.slice(0, seperationSize);
    console.log(trainingSetX);
   //testSetX = X.slice(seperationSize);
    //testSetY = y.slice(seperationSize);

    return train(temp);
}

function train(temp) {
    knn = new KNN(trainingSetX, trainingSetY, {k: 7});
    return test(temp);
}

function test(temp) {
    const result = knn.predict(testSetX);
    const testSetLength = testSetX.length;
    const predictionError = error(result, testSetY);
    console.log(`Test Set Size = ${testSetLength} and number of Misclassifications = ${predictionError}`);
    predict(temp);
}

function error(predicted, expected) {
    let misclassifications = 0;
    for (var index = 0; index < predicted.length; index++) {
        if (predicted[index] !== expected[index]) {
            misclassifications++;
        }
    }
    return misclassifications;
}

function predict(temp) {
    console.log(knn.predict(temp));
    return knn.predict(temp);
}

 

/**
 * https://stackoverflow.com/a/12646864
 * Randomize array element order in-place.
 * Using Durstenfeld shuffle algorithm.
 */
function shuffleArray(array) {
    for (var i = array.length - 1; i > 0; i--) {
        var j = Math.floor(Math.random() * (i + 1));
        var temp = array[i];
        array[i] = array[j];
        array[j] = temp;
    }
    return array;
}
